// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// Example model - replace with your actual schema
model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique @db.VarChar(80)
  username     String   @unique @db.VarChar(80)
  password     String   @db.VarChar(255)
  phone_number String?  @db.VarChar(16)
  created_at   DateTime @default(now()) @db.Timestamp(0)
  updated_at   DateTime @default(now()) @updatedAt @db.Timestamp(0)

  lessons       Lesson[]
  wordUserMarks WordUserMark[]

  @@map("user")
}

model Lesson {
  id            Int      @id @default(autoincrement())
  created_by    Int
  title         String   @db.VarChar(255)
  language_code String   @db.VarChar(10)
  image_s3_key  String?  @db.VarChar(500)
  file_s3_key   String?  @db.VarChar(500)
  audio_s3_key  String?  @db.VarChar(500)
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(now()) @updatedAt @db.Timestamp(0)

  user      User       @relation(fields: [created_by], references: [id])
  sentences Sentence[]

  @@map("lesson")
}

model Sentence {
  id            Int      @id @default(autoincrement())
  lesson_id     Int
  original_text String   @db.Text
  split_text    Json?
  start_time    Decimal? @db.Decimal(10, 3)
  end_time      Decimal? @db.Decimal(10, 3)
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(now()) @updatedAt @db.Timestamp(0)

  lesson               Lesson                @relation(fields: [lesson_id], references: [id])
  sentenceTranslations SentenceTranslation[]

  @@map("sentence")
}

model SentenceTranslation {
  id            Int      @id @default(autoincrement())
  sentence_id   Int
  language_code String   @db.VarChar(10)
  translation   String   @db.Text
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(now()) @updatedAt @db.Timestamp(0)

  sentence Sentence @relation(fields: [sentence_id], references: [id])

  @@unique([sentence_id, language_code])
  @@map("sentence_translation")
}

model Word {
  id            Int      @id @default(autoincrement())
  word          String   @db.VarChar(255)
  language_code String   @db.VarChar(10)
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(now()) @updatedAt @db.Timestamp(0)

  wordTranslations   WordTranslation[]
  wordPronunciations WordPronunciation[]
  wordUserMarks      WordUserMark[]

  @@unique([word, language_code])
  @@map("word")
}

model WordTranslation {
  id            Int      @id @default(autoincrement())
  word_id       Int
  language_code String   @db.VarChar(10)
  translation   String
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(now()) @updatedAt @db.Timestamp(0)

  word Word @relation(fields: [word_id], references: [id])

  @@unique([word_id, language_code, translation])
  @@map("word_translation")
}

model WordPronunciation {
  id                 Int      @id @default(autoincrement())
  word_id            Int
  pronunciation      String   @db.VarChar(255)
  pronunciation_type String?  @db.VarChar(20) // e.g., 'hiragana', 'romanji', 'ipa', etc.
  created_at         DateTime @default(now()) @db.Timestamp(0)
  updated_at         DateTime @default(now()) @updatedAt @db.Timestamp(0)

  word Word @relation(fields: [word_id], references: [id])

  @@unique([word_id, pronunciation, pronunciation_type])
  @@map("word_pronunciation")
}

model WordUserMark {
  id         Int      @id @default(autoincrement())
  user_id    Int
  word_id    Int
  note       String   @db.VarChar(512)
  mark       Int // from 0 -> 5, 0: ignore, 1: don't remember, 2: hard to remember, 3: remembered, 4: easy to remember, 5: no problem remembering
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(0)

  user User @relation(fields: [user_id], references: [id])
  word Word @relation(fields: [word_id], references: [id])

  @@map("word_user_mark")
}
